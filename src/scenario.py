"""
Utility functions related to simulation setup, including simulation scenario 
YAML definitions and box poses.
"""

from pydrake.all import (
    RigidTransform,
    RotationMatrix,
)


import os
import re

q_nominal = [0.0, -2.5, 2.5, 0.0, 1.5, 0.0]
# q_nominal = [0.0, -1.8, 1.5, 0.0, 0.0, 0.0]

relative_path_to_robot_base = '../data/unload-gen0/robot_base.urdf'
relative_path_to_robot_arm = '../data/unload-gen0/robot_arm.urdf'

""" Note: It is necessary to split the truck trailer into individual parts since
    Drake automatically takes the convex hull of the collision geometry, which 
    would make the hollow shipping container no longer hollow."""
relative_path_to_truck_trailer_floor = '../data/Truck_Trailer_Floor.sdf'
relative_path_to_truck_trailer_back = '../data/Truck_Trailer_Back.sdf'
relative_path_to_truck_trailer_right_side = '../data/Truck_Trailer_Right_Side.sdf'
relative_path_to_truck_trailer_left_side = '../data/Truck_Trailer_Left_Side.sdf'
relative_path_to_truck_trailer_roof = '../data/Truck_Trailer_Roof.sdf'

absolute_path_to_robot_base = os.path.abspath(relative_path_to_robot_base)
absolute_path_to_robot_arm = os.path.abspath(relative_path_to_robot_arm)
absolute_path_to_truck_trailer_floor = os.path.abspath(relative_path_to_truck_trailer_floor)
absolute_path_to_truck_trailer_back = os.path.abspath(relative_path_to_truck_trailer_back)
absolute_path_to_truck_trailer_right_side = os.path.abspath(relative_path_to_truck_trailer_right_side)
absolute_path_to_truck_trailer_left_side = os.path.abspath(relative_path_to_truck_trailer_left_side)
absolute_path_to_truck_trailer_roof = os.path.abspath(relative_path_to_truck_trailer_roof)

scenario_yaml = f"""
directives:
- add_model:
    name: robot_base
    file: file://{absolute_path_to_robot_base}
- add_model:
    name: kuka
    file: file://{absolute_path_to_robot_arm}
    default_joint_positions:
        arm_a1: [{q_nominal[0]}]
        arm_a2: [{q_nominal[1]}]
        arm_a3: [{q_nominal[2]}]
        arm_a4: [{q_nominal[3]}]
        arm_a5: [{q_nominal[4]}]
        arm_a6: [{q_nominal[5]}]
- add_weld:
    parent: robot_base::base
    child: kuka::base_link        


- add_model: 
    name: Truck_Trailer_Floor
    file: file://{absolute_path_to_truck_trailer_floor}
- add_weld:
    parent: world
    child: Truck_Trailer_Floor::Truck_Trailer_Floor


- add_model: 
    name: Truck_Trailer_Right_Side
    file: file://{absolute_path_to_truck_trailer_right_side}
- add_weld:
    parent: world
    child: Truck_Trailer_Right_Side::Truck_Trailer_Right_Side


- add_model: 
    name: Truck_Trailer_Left_Side
    file: file://{absolute_path_to_truck_trailer_left_side}
- add_weld:
    parent: world
    child: Truck_Trailer_Left_Side::Truck_Trailer_Left_Side
    
    
- add_model: 
    name: Truck_Trailer_Roof
    file: file://{absolute_path_to_truck_trailer_roof}


- add_model: 
    name: Truck_Trailer_Back
    file: file://{absolute_path_to_truck_trailer_back}
- add_weld:
    parent: world
    child: Truck_Trailer_Back::Truck_Trailer_Back
"""


scenario_yaml_for_iris = scenario_yaml.replace(
f"""
model_drivers:
    kuka: !ForceDriver {{}}  # ForceDriver allows access to desired_state and desired_acceleration input ports for station (results in better traj following)
""",
""
)

scenario_yaml_for_iris = scenario_yaml_for_iris.replace(
f"""
- add_model: 
    name: Truck_Trailer_Roof
    file: file://{absolute_path_to_truck_trailer_roof}
""",
f"""
- add_model: 
    name: Truck_Trailer_Roof
    file: file://{absolute_path_to_truck_trailer_roof}
- add_weld:
    parent: world
    child: Truck_Trailer_Roof::Truck_Trailer_Roof
"""
)


robot_yaml = f"""
directives:
- add_model:
    name: kuka
    file: file://{absolute_path_to_robot_arm}
    default_joint_positions:
        arm_a1: [{q_nominal[0]}]
        arm_a2: [{q_nominal[1]}]
        arm_a3: [{q_nominal[2]}]
        arm_a4: [{q_nominal[3]}]
        arm_a5: [{q_nominal[4]}]
        arm_a6: [{q_nominal[5]}]

- add_weld:
    parent: world
    child: kuka::base_link
"""


def get_fast_box_poses():
    box_poses_string = """
    {BodyIndex(31): RigidTransform(
    R=RotationMatrix([
        [-0.9999997176862031, -0.0007156868864111138, 0.00022895369674479288],
        [0.0007159296443238647, -0.9999991798280695, 0.0010619736029027834],
        [0.00022819346838208509, 0.0010621372178316604, 0.9999994098959617],
    ]),
    p=[4.770442077161326, 1.0131729205667976, 0.024974037215058257],
    ), BodyIndex(32): RigidTransform(
    R=RotationMatrix([
        [-0.9850345496229992, -0.000877417203230077, 0.17235476839375852],
        [-0.17235520041929359, 0.0004426370804041513, -0.9850347653564516],
        [0.0007879958374279322, -0.9999995171056165, -0.0005872402350561856],
    ]),
    p=[5.229699207341537, 1.3397577586905007, 1.2741249041152596],
    ), BodyIndex(33): RigidTransform(
    R=RotationMatrix([
        [-0.9983135391711323, 0.05805207911370018, -0.0001833526257319446],
        [0.058052236413487585, 0.9983130272794625, -0.0010185339993211838],
        [0.00012391529854550908, -0.001027460311604483, -0.9999994644850104],
    ]),
    p=[4.74792692860214, 0.8695344837889061, 2.0251926258956305],
    ), BodyIndex(34): RigidTransform(
    R=RotationMatrix([
        [-0.9918902449417857, -0.12709607633616465, -0.00057390702709893],
        [-0.12709560463381758, 0.9918901529222033, -0.0007948702614429517],
        [0.0006702776202979853, -0.0007154829977068556, -0.9999995194058802],
    ]),
    p=[5.200170523574158, 0.9740297867260301, 1.0240990224478994],
    ), BodyIndex(35): RigidTransform(
    R=RotationMatrix([
        [0.00021261924128934684, -0.20884168585690965, -0.9779494388983011],
        [-6.221758829701163e-05, -0.9779494618732134, 0.208841677236283],
        [-0.9999999754610146, 1.64418966011326e-05, -0.00022092449863256834],
    ]),
    p=[2.6518751853133202, -1.089357156741042, 2.5258209811445815],
    ), BodyIndex(36): RigidTransform(
    R=RotationMatrix([
        [-0.9992141933395713, 0.017206654533297068, -0.03570611808249978],
        [0.005208143377334914, 0.9500429756209217, 0.3120756634470332],
        [0.03929212480015268, 0.31164446972971716, -0.9493860402468388],
    ]),
    p=[6.013068599592803, 0.7102940614787339, 1.621637966718485],
    ), BodyIndex(37): RigidTransform(
    R=RotationMatrix([
        [-0.994875831782646, -0.0030466617471252427, 0.1010583850404633],
        [-0.04781236157642569, -0.8665379134350927, -0.49681588406575805],
        [0.08908455205743063, -0.49910195594863604, 0.861951959306882],
    ]),
    p=[5.888680278980767, 0.975278644000258, 0.5319394649299967],
    ), BodyIndex(38): RigidTransform(
    R=RotationMatrix([
        [-0.9900319599779879, -0.1408424917818449, -0.00033276241458243014],
        [-0.14084222790269643, 0.9900317950488507, -0.0007152843876033558],
        [0.00043018780611654077, -0.0006612874043685351, -0.9999996888186616],
    ]),
    p=[4.661240047070348, 1.1856152734529197, 1.024720774912525],
    ), BodyIndex(39): RigidTransform(
    R=RotationMatrix([
        [-0.9999762162628625, 0.006891861167682893, -0.00026297957167921134],
        [0.006347799754474227, 0.9346055913672563, 0.35562915238115445],
        [0.0026967289234984173, 0.35561902484921504, -0.934627111108172],
    ]),
    p=[5.998501545071672, -0.6758079145276134, 1.541116808506661],
    ), BodyIndex(40): RigidTransform(
    R=RotationMatrix([
        [-0.9679956144525173, 1.7896598245109585e-05, -0.2509671095590132],
        [0.2509671049625406, -0.0001352148856366142, -0.9679956063658843],
        [-5.1258317487701266e-05, -0.9999999906983232, 0.00012639595885444166],
    ]),
    p=[4.900079712829492, 0.3524535714406948, 0.7755436934904136],
    ), BodyIndex(41): RigidTransform(
    R=RotationMatrix([
        [-0.9999262229029042, -1.4625474167186692e-05, 0.01214695588311483],
        [0.00013567893346154534, 0.9999234433265793, 0.012372917083049058],
        [-0.012146206912359405, 0.012373652331163092, -0.999849669893244],
    ]),
    p=[5.908710282408962, -1.0266455254685873, 2.5946614445740197],
    ), BodyIndex(42): RigidTransform(
    R=RotationMatrix([
        [-0.9832011378138502, 0.0038409306772084414, -0.1824849852812107],
        [-0.08818183508437752, 0.8653641219046484, 0.4933243359913928],
        [0.1598107836245804, 0.5011289093354422, -0.8504882889643856],
    ]),
    p=[6.055261658774192, -0.1034407047636141, 1.3956108860813787],
    ), BodyIndex(43): RigidTransform(
    R=RotationMatrix([
        [-0.954066242216241, 0.030358469241857634, -0.29805363411418434],
        [0.09235388925413973, 0.9762067714845075, -0.1961914841358533],
        [0.2850059027511798, -0.21470608434109606, -0.9341696488025605],
    ]),
    p=[5.554042840269975, -0.4253571352893708, 0.7809256088090991],
    ), BodyIndex(44): RigidTransform(
    R=RotationMatrix([
        [-0.47912187067686074, -0.0013772772536674563, -0.8777473076839781],
        [0.0011359915906537482, -0.9999989044440906, 0.000949017241640946],
        [-0.8777476531225883, -0.000542418644128363, 0.47912291034744187],
    ]),
    p=[4.229960565847091, -1.0229149495058458, 2.260793096741699],
    ), BodyIndex(45): RigidTransform(
    R=RotationMatrix([
        [-3.964093233072008e-05, 0.8346117665488576, 0.5508386311496244],
        [-0.00014917431266781023, 0.5508386205181193, -0.8346117611756498],
        [-0.9999999880878104, -0.00011525576253978986, 0.00010266688013826908],
    ]),
    p=[1.1656219441409466, 0.29096987330043894, 2.5256022286060555],
    ), BodyIndex(46): RigidTransform(
    R=RotationMatrix([
        [-0.9689339836158407, 0.00041233562339244856, -0.24731915690797418],
        [0.2473188973607034, -0.0005933079653160922, -0.9689339559505302],
        [-0.0005462624125217308, -0.9999997389824619, 0.00047289785862481004],
    ]),
    p=[5.030382243488512, -0.3364091369123529, 0.2764987634837135],
    ), BodyIndex(47): RigidTransform(
    R=RotationMatrix([
        [-0.9996256856199592, -0.006212110299050822, 0.02664391740076398],
        [0.0273323794855997, -0.26932423399168215, 0.9626616217635607],
        [0.0011956924694400285, 0.9630295253368021, 0.26939321381410575],
    ]),
    p=[5.971371359767336, -1.6930800724868214, 1.0676504615785805],
    ), BodyIndex(48): RigidTransform(
    R=RotationMatrix([
        [-0.9674269629158604, 0.25314836587026446, 0.0009880691313368668],
        [0.2531483664317469, 0.967427459065487, -0.0001265663199870531],
        [-0.0009879252661892034, 0.00012768441596705128, -0.9999995038500556],
    ]),
    p=[4.686707389184384, -1.0275851566235152, 1.527677313536029],
    ), BodyIndex(49): RigidTransform(
    R=RotationMatrix([
        [0.6680279482892644, -0.00018276959042395902, -0.74413616153209],
        [0.7441361673132805, -4.755487323343521e-05, 0.6680279651592704],
        [-0.00015748249841396333, -0.9999999821669052, 0.00010423747812216],
    ]),
    p=[-0.15697033839556487, -3.0113851519930868, 0.2759402281173043],
    ), BodyIndex(50): RigidTransform(
    R=RotationMatrix([
        [-0.9926617209710511, -0.09455348638535047, -0.07538133675630034],
        [-0.07505119450621411, -0.007047989144217337, 0.9971547743716687],
        [-0.09481574722577378, 0.9954948337693161, -0.00010008306466369188],
    ]),
    p=[5.035892285241465, -1.0643534550912819, 1.5107836205817047],
    ), BodyIndex(51): RigidTransform(
    R=RotationMatrix([
        [-0.9867391868886152, 0.16231366275190034, -0.00022790887809049151],
        [0.16231372256705728, 0.9867391652136143, -0.00027440838913978503],
        [0.00018034638538065568, -0.00030776224918415557, -0.9999999363787875],
    ]),
    p=[4.294975071283179, -0.26704756046365835, 1.0252533976015712],
    ), BodyIndex(52): RigidTransform(
    R=RotationMatrix([
        [-0.9993214052957573, -0.03682064298969355, -0.0009844630712986721],
        [-0.03681865917853458, 0.9993200361995789, -0.001962545889181654],
        [0.001056055873583786, -0.0019249675056384225, -0.9999975896201423],
    ]),
    p=[5.307581827014511, 0.989537881648531, 1.5227987392736206],
    ), BodyIndex(53): RigidTransform(
    R=RotationMatrix([
        [-0.9869128701214777, -0.14925453014259044, -0.06104155978103956],
        [-0.02044093674604014, 0.49128172603348774, -0.870760836148768],
        [0.15995360231495898, -0.8581173293305944, -0.4879031606876476],
    ]),
    p=[5.943564678302381, 0.3135202239442143, 1.4600361861525033],
    ), BodyIndex(54): RigidTransform(
    R=RotationMatrix([
        [0.769413067522515, 0.5800334062041075, -0.2675159419788935],
        [-0.1629426542568897, -0.22672357373667032, -0.960232322167814],
        [-0.6176189949712635, 0.7824050541754786, -0.0799318975838367],
    ]),
    p=[-0.12702020729950295, 0.15146767836583286, 2.0542636447027114],
    ), BodyIndex(55): RigidTransform(
    R=RotationMatrix([
        [-0.8775999317852363, -0.013361907115333006, -0.4792074907269198],
        [-0.01577190771738657, 0.9998751115260646, 0.0010041303173851874],
        [0.47913422613867185, 0.008439241019266085, -0.8777010724349811],
    ]),
    p=[4.969608646429816, -0.9812909693794136, 0.7175537702935612],
    ), BodyIndex(56): RigidTransform(
    R=RotationMatrix([
        [-0.995354070342095, -0.09627964742923803, -0.000710031214384051],
        [-0.09627978408235405, 0.9953542973871303, 0.0001607794375814065],
        [0.000691252832951959, 0.0002283941196365938, -0.9999997350027884],
    ]),
    p=[5.362196665437811, 0.5563445410913845, 1.5239816551617993],
    ), BodyIndex(57): RigidTransform(
    R=RotationMatrix([
        [-0.9999362862155157, 0.011256579214135434, -0.0008443541425027663],
        [0.011254073783475, 0.9999324204169269, 0.002915548391371625],
        [0.0008771161828219697, 0.0029058602069306546, -0.9999953933112189],
    ]),
    p=[5.980293605901049, -0.5810795816446831, 1.0238937071412149],
    ), BodyIndex(58): RigidTransform(
    R=RotationMatrix([
        [-0.9976149035979796, 0.00035815993184671463, -0.0690244582786181],
        [0.06902439695705248, -0.00018085330078265738, -0.997614955740339],
        [-0.00036978900567165296, -0.99999991950677, 0.00015570017491606247],
    ]),
    p=[4.938082100339332, 0.6300950766157128, 0.27634865910081613],
    ), BodyIndex(59): RigidTransform(
    R=RotationMatrix([
        [-0.999090914756288, 0.042626755811479906, 0.000551126512246659],
        [0.042626909358647096, 0.9990910237512609, 0.00026992255737384887],
        [-0.0005391196283957911, 0.0002931699946426809, -0.9999998117006726],
    ]),
    p=[4.019366246008483, 0.39791845071289544, 1.5267980675764745],
    ), BodyIndex(60): RigidTransform(
    R=RotationMatrix([
        [-0.996895936371662, 0.07872994040076288, 0.00029754018217083213],
        [0.07873000676367665, 0.9968959516299943, 0.0002183087708776658],
        [-0.0002794291665331912, 0.0002410564671170124, -0.9999999319055581],
    ]),
    p=[4.074056586287829, 0.48351938365358205, 1.0262951289267628],
    ), BodyIndex(61): RigidTransform(
    R=RotationMatrix([
        [-0.9328829271713579, 0.36017909880755283, -0.0006789509391569773],
        [0.36017875144819, 0.9328831262538584, 0.0005828859670958763],
        [0.0008433252170299159, 0.00029922066563137277, -0.9999995996347055],
    ]),
    p=[5.207291819605598, -1.7290418905025828, 1.0239058416954283],
    ), BodyIndex(62): RigidTransform(
    R=RotationMatrix([
        [-0.9999785370285256, -0.0036590510457898576, 0.00543477945591732],
        [-0.002038086245289585, 0.962085788229401, 0.272739403628205],
        [-0.006226691476773056, 0.27272247328090965, -0.9620725964711796],
    ]),
    p=[5.980616442299983, -1.1113194447117034, 1.4876161718560226],
    ), BodyIndex(63): RigidTransform(
    R=RotationMatrix([
        [-0.9818777508509102, -0.1831350731067172, -0.04876092064507144],
        [-0.04878719961539435, 0.4928773902530584, -0.8687299277284178],
        [0.18312807413841625, -0.8506076787659113, -0.4928799907551764],
    ]),
    p=[5.924377523755734, 1.2257525843008445, 0.7228203361368333],
    ), BodyIndex(64): RigidTransform(
    R=RotationMatrix([
        [-0.9999365829659297, 0.007966700178168525, -0.00796000846054588],
        [0.011257282332521459, 0.6868649672805156, -0.7266978672854504],
        [-0.0003219330779722098, -0.7267413903246515, -0.6869110917346481],
    ]),
    p=[5.9821482812370315, 0.5718439702738694, 0.8931342272387433],
    ), BodyIndex(65): RigidTransform(
    R=RotationMatrix([
        [-0.6387845946518887, 0.7693371438222427, 0.00863717377713391],
        [0.007361871731606351, 0.017337381720812117, -0.9998225932832657],
        [-0.7693504042242586, -0.6386076842087801, -0.016738613726033913],
    ]),
    p=[4.541023942813881, -0.2314757529743015, 2.620034389478032],
    ), BodyIndex(66): RigidTransform(
    R=RotationMatrix([
        [0.9840545711066018, -0.14634348625387256, -0.10109493120460876],
        [0.10020815573290949, -0.013438253208641233, 0.9948757404195305],
        [-0.1469521235260346, -0.9891425566528633, 0.0014408363633735969],
    ]),
    p=[1.4069666344999183, -0.14857080857788524, 0.6379645213339061],
    ), BodyIndex(67): RigidTransform(
    R=RotationMatrix([
        [-0.9843575530290132, -0.0010337133870238352, -0.1761792815042879],
        [0.17618081456680118, -0.001649737185870026, -0.9843564389720809],
        [0.0007268929164910704, -0.9999981049001299, 0.0018060517259784747],
    ]),
    p=[5.3917989958654475, 1.1463626831947389, 1.272324892567476],
    ), BodyIndex(68): RigidTransform(
    R=RotationMatrix([
        [-0.9993597495651704, 0.03577045890845111, -0.0007518101612567557],
        [0.035770840295333076, 0.9993598935665435, -0.0005001152192744587],
        [0.0007334395718352493, -0.0005266879014985774, -0.9999995923330413],
    ]),
    p=[5.433438515934187, 0.016975378547844776, 1.023924578421956],
    ), BodyIndex(69): RigidTransform(
    R=RotationMatrix([
        [-0.9982321347666125, -0.05943546664333199, -0.000174425288883184],
        [0.05943552451459594, -0.9982320859611956, -0.0003478264446371053],
        [-0.00015344369291834744, -0.00035757859289176053, 0.9999999242962886],
    ]),
    p=[4.75797814878626, -0.10377857461483335, 0.5258368193225083],
    ), BodyIndex(70): RigidTransform(
    R=RotationMatrix([
        [-0.996628986849269, 0.08203450333248614, -0.0010014163928021343],
        [0.08203607021487695, 0.9966280130091723, -0.0016391671937082495],
        [0.0008635713631384426, -0.001715793805056257, -0.9999981551463579],
    ]),
    p=[5.268724290348796, 0.6271036829184242, 2.523347739195212],
    )}
    """

    # Regex pattern to capture the body index, rotation matrix, and translation vector
    # pattern = re.compile(
    #     r'RigidTransform\(\s*R=RotationMatrix\(\[\s*\[\s*([^]]+)\s*\],\s*\[\s*([^]]+)\s*\],\s*\[\s*([^]]+)\s*\]\s*\]\s*\),\s*p=\[\s*([^\]]+)\s*\]\s*\)'
    # )
    pattern = re.compile(
        r'RigidTransform\(\s*R=RotationMatrix\(\[\s*\[\s*([^]]+)\s*\],\s*\[\s*([^]]+)\s*\],\s*\[\s*([^]]+)\s*\],\s*\]\s*\),\s*p=\[\s*([^\]]+)'
    )

    # Find all matches in the string
    matches = pattern.findall(box_poses_string)
    
    box_poses = []
    
    for match in matches:
        # Extract the rotation matrix rows and translation vector
        r1 = list(map(float, match[0].split(',')))
        r2 = list(map(float, match[1].split(',')))
        r3 = list(map(float, match[2].split(',')))
        p = list(map(float, match[3].split(',')))
        
        # Create the RotationMatrix and RigidTransform objects
        R = RotationMatrix([r1, r2, r3])
        T = RigidTransform(R=R, p=p)
        
        # Append the RigidTransform to the list
        box_poses.append(T)
    
    return box_poses